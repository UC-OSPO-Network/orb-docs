"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[9013],{7309:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"troubleshooting","title":"Troubleshooting Guide","description":"This guide helps you resolve common issues when developing, deploying, or using UC ORB Showcase. Issues are organized by category with step-by-step solutions.","source":"@site/docs/troubleshooting.md","sourceDirName":".","slug":"/troubleshooting","permalink":"/orb-docs/docs/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/UC-OSPO-Network/orb-showcase/tree/main/doc/docs/troubleshooting.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"Contributing Guide","permalink":"/orb-docs/docs/contributing"}}');var i=s(4848),o=s(8453);const l={sidebar_position:9},t="Troubleshooting Guide",a={},c=[{value:"Development Environment Issues",id:"development-environment-issues",level:2},{value:"Database Connection Problems",id:"database-connection-problems",level:3},{value:"Issue: &quot;Connection refused&quot; or &quot;Database does not exist&quot;",id:"issue-connection-refused-or-database-does-not-exist",level:4},{value:"Issue: &quot;Table &#39;showcase_view&#39; doesn&#39;t exist&quot;",id:"issue-table-showcase_view-doesnt-exist",level:4},{value:"Frontend Issues",id:"frontend-issues",level:3},{value:"Issue: &quot;Module not found&quot; or Import Errors",id:"issue-module-not-found-or-import-errors",level:4},{value:"Issue: &quot;Hydration Mismatch&quot; Errors",id:"issue-hydration-mismatch-errors",level:4},{value:"Issue: API Calls Failing (CORS or Network Errors)",id:"issue-api-calls-failing-cors-or-network-errors",level:4},{value:"Backend Issues",id:"backend-issues",level:3},{value:"Issue: &quot;ModuleNotFoundError&quot; for Python Packages",id:"issue-modulenotfounderror-for-python-packages",level:4},{value:"Issue: &quot;Pydantic ValidationError&quot;",id:"issue-pydantic-validationerror",level:4},{value:"Production Deployment Issues",id:"production-deployment-issues",level:2},{value:"Vercel Deployment Problems",id:"vercel-deployment-problems",level:3},{value:"Issue: Build Failures",id:"issue-build-failures",level:4},{value:"Issue: API Connection Failures in Production",id:"issue-api-connection-failures-in-production",level:4},{value:"Database Performance Issues",id:"database-performance-issues",level:3},{value:"Issue: Slow Query Performance",id:"issue-slow-query-performance",level:4},{value:"Common User Issues",id:"common-user-issues",level:2},{value:"Search and Filtering Problems",id:"search-and-filtering-problems",level:3},{value:"Issue: Search Returns No Results",id:"issue-search-returns-no-results",level:4},{value:"Issue: Filters Not Working",id:"issue-filters-not-working",level:4},{value:"Performance Issues",id:"performance-issues",level:3},{value:"Issue: Slow Page Loading",id:"issue-slow-page-loading",level:4},{value:"Debugging Tools and Techniques",id:"debugging-tools-and-techniques",level:2},{value:"Frontend Debugging",id:"frontend-debugging",level:3},{value:"Backend Debugging",id:"backend-debugging",level:3},{value:"Getting Additional Help",id:"getting-additional-help",level:2},{value:"When to Seek Help",id:"when-to-seek-help",level:3},{value:"How to Report Issues",id:"how-to-report-issues",level:3},{value:"Community Resources",id:"community-resources",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"troubleshooting-guide",children:"Troubleshooting Guide"})}),"\n",(0,i.jsx)(n.p,{children:"This guide helps you resolve common issues when developing, deploying, or using UC ORB Showcase. Issues are organized by category with step-by-step solutions."}),"\n",(0,i.jsx)(n.h2,{id:"development-environment-issues",children:"Development Environment Issues"}),"\n",(0,i.jsx)(n.h3,{id:"database-connection-problems",children:"Database Connection Problems"}),"\n",(0,i.jsx)(n.h4,{id:"issue-connection-refused-or-database-does-not-exist",children:'Issue: "Connection refused" or "Database does not exist"'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at "localhost", port 5432 failed: Connection refused\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Check PostgreSQL is Running"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# For Docker setup\ndocker ps | grep postgres\n# Should show running postgres container\n\n# If not running, start it\ndocker run -d \\\n  --name orb-db \\\n  -e POSTGRES_USER=postgres \\\n  -e POSTGRES_PASSWORD=orb \\\n  -e POSTGRES_DB=sample \\\n  -p 5432:5432 \\\n  postgres:15\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Verify Connection String"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check your .env file\ncat backend/.env\n\n# Should contain:\nPOSTGRES_DB_URL=postgresql://postgres:orb@localhost:5432/sample\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Test Connection Manually"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Test with psql\npsql postgresql://postgres:orb@localhost:5432/sample\n\n# If successful, you should see:\n# sample=#\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Check Port Conflicts"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check if port 5432 is in use\nlsof -i :5432\nnetstat -an | grep 5432\n\n# If another service is using port 5432, change Docker port:\ndocker run -d \\\n  --name orb-db \\\n  -e POSTGRES_USER=postgres \\\n  -e POSTGRES_PASSWORD=orb \\\n  -e POSTGRES_DB=sample \\\n  -p 5433:5432 \\\n  postgres:15\n\n# Update connection string:\nPOSTGRES_DB_URL=postgresql://postgres:orb@localhost:5433/sample\n"})}),"\n",(0,i.jsx)(n.h4,{id:"issue-table-showcase_view-doesnt-exist",children:"Issue: \"Table 'showcase_view' doesn't exist\""}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedTable) relation "showcase_view" does not exist\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Load Sample Data"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# If you have sample data\ncat db/sample.sql | docker exec -i orb-db psql -U postgres -d sample\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Create Minimal View for Development"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Connect to database\npsql postgresql://postgres:orb@localhost:5432/sample\n\n-- Create minimal table and view\nCREATE TABLE IF NOT EXISTS repositories (\n    full_name VARCHAR PRIMARY KEY,\n    description TEXT,\n    university VARCHAR,\n    license VARCHAR,\n    owner VARCHAR,\n    organization VARCHAR,\n    language VARCHAR,\n    stargazers_count VARCHAR,\n    html_url VARCHAR,\n    forks_count VARCHAR,\n    subscribers_count VARCHAR,\n    created_at TIMESTAMP,\n    readme TEXT,\n    homepage VARCHAR,\n    default_branch VARCHAR,\n    approved BOOLEAN DEFAULT true,\n    topic_area_ai VARCHAR\n);\n\nCREATE VIEW showcase_view AS SELECT * FROM repositories;\n\n-- Insert sample data\nINSERT INTO repositories (full_name, description, university, language, approved) VALUES\n('uc-berkeley/example-repo', 'Example repository for testing', 'UC Berkeley', 'Python', true),\n('ucla/sample-project', 'Sample project from UCLA', 'UCLA', 'JavaScript', true);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"frontend-issues",children:"Frontend Issues"}),"\n",(0,i.jsx)(n.h4,{id:"issue-module-not-found-or-import-errors",children:'Issue: "Module not found" or Import Errors'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"Module not found: Can't resolve '@/components/RepositoryCard'\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Check TypeScript Configuration"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'// tsconfig.json\n{\n  "compilerOptions": {\n    "baseUrl": ".",\n    "paths": {\n      "@/*": ["./*"]\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Verify File Exists"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check if the file exists\nls -la components/RepositoryCard.tsx\n\n# Check the import path\n# Should be: import { RepositoryCard } from '@/components/RepositoryCard';\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Clear Next.js Cache"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"rm -rf .next\nrm -rf node_modules/.cache\nnpm run dev\n"})}),"\n",(0,i.jsx)(n.h4,{id:"issue-hydration-mismatch-errors",children:'Issue: "Hydration Mismatch" Errors'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'Warning: Text content did not match. Server: "0" Client: "150"\nError: Hydration failed because the initial UI does not match what was rendered on the server.\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Use Client Components for Dynamic Content"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// Mark component as client-side\n"use client";\n\nexport function RepositoryStats({ repo }: { repo: Repository }) {\n  const [mounted, setMounted] = useState(false);\n  \n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  \n  if (!mounted) {\n    return <div>Loading...</div>;\n  }\n  \n  return <div>{repo.stargazers_count} stars</div>;\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Use Suspense for Loading States"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { Suspense } from 'react';\n\nexport default function Page() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <RepositoriesPageClient />\n    </Suspense>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"issue-api-calls-failing-cors-or-network-errors",children:"Issue: API Calls Failing (CORS or Network Errors)"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"Access to fetch at 'http://localhost:8000/repositories' from origin 'http://localhost:3000' has been blocked by CORS policy\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Check Backend CORS Configuration"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# main.py\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=["http://localhost:3000"],  # Add your frontend URL\n    allow_credentials=True,\n    allow_methods=["*"],\n    allow_headers=["*"],\n)\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Verify API URL Environment Variable"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check .env.local\ncat frontend/.env.local\n\n# Should contain:\nNEXT_PUBLIC_API_URL=http://localhost:8000\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Test API Directly"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Test backend is running\ncurl http://localhost:8000/repositories\n\n# Should return JSON data\n"})}),"\n",(0,i.jsx)(n.h3,{id:"backend-issues",children:"Backend Issues"}),"\n",(0,i.jsx)(n.h4,{id:"issue-modulenotfounderror-for-python-packages",children:'Issue: "ModuleNotFoundError" for Python Packages'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ModuleNotFoundError: No module named 'fastapi'\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Activate Virtual Environment"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd backend\nsource .venv/bin/activate  # On Windows: .venv\\Scripts\\activate\n\n# Verify activation (should show .venv in prompt)\nwhich python\n# Should show: /path/to/orb-showcase/backend/.venv/bin/python\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Install Dependencies"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install -r requirements.txt\n\n# Verify installation\npip list | grep fastapi\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Recreate Virtual Environment"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"rm -rf .venv\npython3 -m venv .venv\nsource .venv/bin/activate\npip install -r requirements.txt\n"})}),"\n",(0,i.jsx)(n.h4,{id:"issue-pydantic-validationerror",children:'Issue: "Pydantic ValidationError"'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pydantic.error_wrappers.ValidationError: 1 validation error for Repository\nfull_name\n  field required (type=value_error.missing)\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Check Data Model Consistency"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Ensure SQLModel and Pydantic models match\nclass Repository(SQLModel, table=True):\n    full_name: str = Field(primary_key=True)  # Required field\n    description: Optional[str] = None         # Optional field\n\nclass RepositoryResponse(BaseModel):\n    full_name: str          # Must match SQLModel\n    description: Optional[str] = None\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Validate Database Data"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Check for NULL values in required fields\nSELECT COUNT(*) FROM showcase_view WHERE full_name IS NULL;\n-- Should return 0\n\n-- Check data types\n\\d showcase_view\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Add Data Validation"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.get("/repositories/{owner}/{repo}")\ndef get_repository(owner: str, repo: str, session: Session = Depends(get_session)):\n    full_name = f"{owner}/{repo}"\n    \n    if not owner or not repo:\n        raise HTTPException(status_code=400, detail="Owner and repo are required")\n    \n    repository = session.exec(\n        select(Repository).where(Repository.full_name == full_name)\n    ).first()\n    \n    if not repository:\n        raise HTTPException(status_code=404, detail="Repository not found")\n    \n    return repository\n'})}),"\n",(0,i.jsx)(n.h2,{id:"production-deployment-issues",children:"Production Deployment Issues"}),"\n",(0,i.jsx)(n.h3,{id:"vercel-deployment-problems",children:"Vercel Deployment Problems"}),"\n",(0,i.jsx)(n.h4,{id:"issue-build-failures",children:"Issue: Build Failures"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'Error: Command "npm run build" exited with 1\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Check Build Locally"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd frontend\nnpm run build\n\n# Fix any TypeScript errors or warnings\nnpx tsc --noEmit\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Update Vercel Configuration"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'// vercel.json\n{\n  "version": 2,\n  "builds": [\n    {\n      "src": "frontend/package.json",\n      "use": "@vercel/next",\n      "config": {\n        "distDir": ".next"\n      }\n    }\n  ],\n  "routes": [\n    {\n      "src": "/(.*)",\n      "dest": "/frontend/$1"\n    }\n  ],\n  "buildCommand": "cd frontend && npm install && npm run build",\n  "outputDirectory": "frontend/.next"\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Check Environment Variables"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# In Vercel dashboard, add environment variables:\nNEXT_PUBLIC_API_URL=https://your-api-domain.com\n"})}),"\n",(0,i.jsx)(n.h4,{id:"issue-api-connection-failures-in-production",children:"Issue: API Connection Failures in Production"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"TypeError: Failed to fetch\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Update CORS for Production"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# main.py\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\n        "https://your-frontend-domain.vercel.app",\n        "https://uc-orb-showcase.org"\n    ],\n    allow_credentials=True,\n    allow_methods=["*"],\n    allow_headers=["*"],\n)\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Use HTTPS for API Calls"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Ensure API URL uses HTTPS in production\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'https://api.uc-orb-showcase.org';\n"})}),"\n",(0,i.jsx)(n.h3,{id:"database-performance-issues",children:"Database Performance Issues"}),"\n",(0,i.jsx)(n.h4,{id:"issue-slow-query-performance",children:"Issue: Slow Query Performance"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"API responses taking > 2 seconds"}),"\n",(0,i.jsx)(n.li,{children:"Database CPU usage high"}),"\n",(0,i.jsx)(n.li,{children:"Timeout errors"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Add Database Indexes"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Add indexes for commonly filtered fields\nCREATE INDEX IF NOT EXISTS idx_showcase_view_university ON showcase_view(university);\nCREATE INDEX IF NOT EXISTS idx_showcase_view_language ON showcase_view(language);\nCREATE INDEX IF NOT EXISTS idx_showcase_view_approved ON showcase_view(approved);\nCREATE INDEX IF NOT EXISTS idx_showcase_view_owner ON showcase_view(owner);\n\n-- Composite index for common filter combinations\nCREATE INDEX IF NOT EXISTS idx_showcase_view_filters \nON showcase_view(approved, university, language);\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Optimize Queries"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Use database-level filtering instead of Python filtering\ndef list_repositories(\n    university: List[str] = None,\n    language: List[str] = None,\n    session: Session = Depends(get_session)\n):\n    statement = select(Repository).where(Repository.approved == True)\n    \n    # Apply filters at database level\n    if university:\n        statement = statement.where(Repository.university.in_(university))\n    if language:\n        statement = statement.where(Repository.language.in_(language))\n    \n    # Limit results to prevent large responses\n    statement = statement.limit(1000)\n    \n    return session.exec(statement).all()\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Monitor Query Performance"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Enable query logging (PostgreSQL)\nALTER SYSTEM SET log_statement = 'all';\nALTER SYSTEM SET log_min_duration_statement = 1000; -- Log queries > 1 second\n\n-- Check slow queries\nSELECT query, mean_time, calls \nFROM pg_stat_statements \nORDER BY mean_time DESC \nLIMIT 10;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"common-user-issues",children:"Common User Issues"}),"\n",(0,i.jsx)(n.h3,{id:"search-and-filtering-problems",children:"Search and Filtering Problems"}),"\n",(0,i.jsx)(n.h4,{id:"issue-search-returns-no-results",children:"Issue: Search Returns No Results"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"User searches for known repositories but gets no results"}),"\n",(0,i.jsx)(n.li,{children:"Filters don't seem to work"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Check Search Implementation"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// Ensure fuzzy search is working correctly\nconst filteredRepositories = useMemo(() => {\n  if (!repositories) return [];\n  \n  let result = repositories;\n  \n  if (searchTerm.trim()) {\n    const fuzzy = fuzzysort.go(\n      searchTerm,\n      result,\n      { \n        keys: ["full_name", "description"], \n        threshold: -10000,  // Lower threshold for more matches\n        limit: 100          // Increase limit\n      }\n    );\n    result = fuzzy.map(r => r.obj);\n  }\n  \n  return result;\n}, [repositories, searchTerm]);\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Debug Search Data"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Add debugging to see what's being searched\nconsole.log('Search term:', searchTerm);\nconsole.log('Repositories to search:', repositories.length);\nconsole.log('Search results:', filteredRepositories.length);\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Check Data Quality"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Verify repository data exists\nSELECT COUNT(*) FROM showcase_view WHERE approved = true;\n\n-- Check for empty descriptions\nSELECT COUNT(*) FROM showcase_view \nWHERE approved = true AND (description IS NULL OR description = '');\n"})}),"\n",(0,i.jsx)(n.h4,{id:"issue-filters-not-working",children:"Issue: Filters Not Working"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Verify Filter Data"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Check if filter options are loaded\nconst { data: universities, isLoading, error } = useQuery({\n  queryKey: [\"universities\"],\n  queryFn: () => fetch(`${API_URL}/universities`).then(res => res.json()),\n});\n\nconsole.log('Universities:', universities);\nconsole.log('Loading:', isLoading);\nconsole.log('Error:', error);\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Check Filter Logic"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Ensure filters are applied correctly\nconst filteredRepositories = useMemo(() => {\n  let result = repositories;\n  \n  console.log('Before filtering:', result.length);\n  \n  if (universitiesSelected.length > 0) {\n    result = result.filter(r => {\n      const matches = r.university && universitiesSelected.includes(r.university);\n      console.log(`${r.full_name}: university=${r.university}, matches=${matches}`);\n      return matches;\n    });\n    console.log('After university filter:', result.length);\n  }\n  \n  return result;\n}, [repositories, universitiesSelected]);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,i.jsx)(n.h4,{id:"issue-slow-page-loading",children:"Issue: Slow Page Loading"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Optimize Data Loading"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Use React.memo for expensive components\nconst RepositoryCard = React.memo(({ repository }: { repository: Repository }) => {\n  return (\n    <div>\n      <h3>{repository.full_name}</h3>\n      <p>{repository.description}</p>\n    </div>\n  );\n});\n\n// Memoize expensive computations\nconst filteredRepositories = useMemo(() => {\n  // Expensive filtering logic\n}, [repositories, filters]);\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Implement Virtual Scrolling"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// For large lists, consider virtual scrolling\nimport { FixedSizeList as List } from 'react-window';\n\nfunction RepositoryList({ repositories }: { repositories: Repository[] }) {\n  const Row = ({ index, style }: { index: number; style: React.CSSProperties }) => (\n    <div style={style}>\n      <RepositoryCard repository={repositories[index]} />\n    </div>\n  );\n\n  return (\n    <List\n      height={600}\n      itemCount={repositories.length}\n      itemSize={200}\n    >\n      {Row}\n    </List>\n  );\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Optimize Images and Assets"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Use Next.js Image component\nimport Image from 'next/image';\n\nfunction RepositoryCard({ repository }: { repository: Repository }) {\n  return (\n    <div>\n      <Image\n        src={`https://github.com/${repository.owner}.png`}\n        alt={`${repository.owner} avatar`}\n        width={40}\n        height={40}\n        loading=\"lazy\"\n      />\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"debugging-tools-and-techniques",children:"Debugging Tools and Techniques"}),"\n",(0,i.jsx)(n.h3,{id:"frontend-debugging",children:"Frontend Debugging"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"React Developer Tools"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install browser extension\n# Chrome: React Developer Tools\n# Firefox: React Developer Tools\n\n# Use to inspect:\n# - Component props and state\n# - Performance profiling\n# - Component tree\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Network Debugging"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Monitor API calls in browser dev tools\n// Network tab -> Filter by XHR/Fetch\n\n// Add request logging\nconst originalFetch = window.fetch;\nwindow.fetch = function(...args) {\n  console.log('Fetch request:', args);\n  return originalFetch.apply(this, args)\n    .then(response => {\n      console.log('Fetch response:', response);\n      return response;\n    });\n};\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"State Debugging"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Debug Zustand store\nimport { subscribeWithSelector } from 'zustand/middleware';\n\nexport const useRepositoriesStore = create(\n  subscribeWithSelector<RepositoriesState>((set, get) => ({\n    // ... store implementation\n  }))\n);\n\n// Subscribe to state changes\nuseRepositoriesStore.subscribe(\n  (state) => state.searchTerm,\n  (searchTerm) => console.log('Search term changed:', searchTerm)\n);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"backend-debugging",children:"Backend Debugging"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"FastAPI Debug Mode"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Enable debug mode\nif __name__ == "__main__":\n    import uvicorn\n    uvicorn.run(\n        "main:app", \n        host="0.0.0.0", \n        port=8000, \n        reload=True,\n        log_level="debug"\n    )\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Database Query Logging"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Enable SQLModel query logging\nengine = create_engine(\n    DATABASE_URL, \n    echo=True  # This logs all SQL queries\n)\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Request/Response Logging"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import logging\nfrom fastapi import Request\n\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\n@app.middleware("http")\nasync def log_requests(request: Request, call_next):\n    logger.info(f"Request: {request.method} {request.url}")\n    response = await call_next(request)\n    logger.info(f"Response: {response.status_code}")\n    return response\n'})}),"\n",(0,i.jsx)(n.h2,{id:"getting-additional-help",children:"Getting Additional Help"}),"\n",(0,i.jsx)(n.h3,{id:"when-to-seek-help",children:"When to Seek Help"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"After trying the solutions above"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"When you have a clear error message"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"When you can reproduce the issue consistently"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"how-to-report-issues",children:"How to Report Issues"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Create a GitHub Issue"})," with:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Clear description of the problem"}),"\n",(0,i.jsx)(n.li,{children:"Steps to reproduce"}),"\n",(0,i.jsx)(n.li,{children:"Expected vs actual behavior"}),"\n",(0,i.jsx)(n.li,{children:"Environment details (OS, Node version, etc.)"}),"\n",(0,i.jsx)(n.li,{children:"Error messages and logs"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Include Context"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"What were you trying to do?"}),"\n",(0,i.jsx)(n.li,{children:"What changed recently?"}),"\n",(0,i.jsx)(n.li,{children:"Does it work in a different environment?"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Provide Minimal Reproduction"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Simplest code that demonstrates the issue"}),"\n",(0,i.jsx)(n.li,{children:"Remove unrelated code and dependencies"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"community-resources",children:"Community Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GitHub Discussions"}),": For questions and general help"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GitHub Issues"}),": For bug reports and feature requests"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentation"}),": This documentation site"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Code Examples"}),": Look at existing implementations"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Remember: Most issues have been encountered before, so searching existing issues and documentation often provides quick solutions!"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);