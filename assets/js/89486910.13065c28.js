"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[7086],{1354:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"components/overview","title":"Components Overview","description":"The UC ORB Showcase frontend is built with a comprehensive component architecture using React 19, TypeScript, and modern design patterns. This guide provides an overview of all components, their relationships, and usage patterns.","source":"@site/docs/components/overview.md","sourceDirName":"components","slug":"/components/overview","permalink":"/orb-docs/docs/components/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/UC-OSPO-Network/orb-showcase/tree/main/doc/docs/components/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"componentsSidebar","next":{"title":"Repository Components","permalink":"/orb-docs/docs/components/repository-components"}}');var r=t(4848),i=t(8453);const s={sidebar_position:1},a="Components Overview",l={},p=[{value:"Component Architecture",id:"component-architecture",level:2},{value:"Component Categories",id:"component-categories",level:2},{value:"1. Layout Components",id:"1-layout-components",level:3},{value:"2. Page Components",id:"2-page-components",level:3},{value:"3. UI Components",id:"3-ui-components",level:3},{value:"4. State Components",id:"4-state-components",level:3},{value:"5. Utility Components",id:"5-utility-components",level:3},{value:"Component Hierarchy",id:"component-hierarchy",level:2},{value:"Root Level",id:"root-level",level:3},{value:"Repository Pages",id:"repository-pages",level:3},{value:"Component Props and Interfaces",id:"component-props-and-interfaces",level:2},{value:"Repository Data Interface",id:"repository-data-interface",level:3},{value:"Common Component Patterns",id:"common-component-patterns",level:3},{value:"Props Interface Pattern",id:"props-interface-pattern",level:4},{value:"Children Pattern",id:"children-pattern",level:4},{value:"State Management Integration",id:"state-management-integration",level:2},{value:"Zustand Store Connection",id:"zustand-store-connection",level:3},{value:"TanStack Query Integration",id:"tanstack-query-integration",level:3},{value:"Component Communication Patterns",id:"component-communication-patterns",level:2},{value:"Props Down, Events Up",id:"props-down-events-up",level:3},{value:"Context for Deep Props",id:"context-for-deep-props",level:3},{value:"Styling and Design System",id:"styling-and-design-system",level:2},{value:"Tailwind CSS Classes",id:"tailwind-css-classes",level:3},{value:"Shadcn/ui Integration",id:"shadcnui-integration",level:3},{value:"Performance Optimization Patterns",id:"performance-optimization-patterns",level:2},{value:"Memoization",id:"memoization",level:3},{value:"Callback Optimization",id:"callback-optimization",level:3},{value:"Error Handling Patterns",id:"error-handling-patterns",level:2},{value:"Error Boundaries",id:"error-boundaries",level:3},{value:"Graceful Degradation",id:"graceful-degradation",level:3},{value:"Loading State Patterns",id:"loading-state-patterns",level:2},{value:"Skeleton Loading",id:"skeleton-loading",level:3},{value:"Progressive Loading",id:"progressive-loading",level:3},{value:"Accessibility Patterns",id:"accessibility-patterns",level:2},{value:"Keyboard Navigation",id:"keyboard-navigation",level:3},{value:"Screen Reader Support",id:"screen-reader-support",level:3},{value:"Testing Patterns",id:"testing-patterns",level:2},{value:"Component Testing",id:"component-testing",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",mermaid:"mermaid",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"components-overview",children:"Components Overview"})}),"\n",(0,r.jsx)(n.p,{children:"The UC ORB Showcase frontend is built with a comprehensive component architecture using React 19, TypeScript, and modern design patterns. This guide provides an overview of all components, their relationships, and usage patterns."}),"\n",(0,r.jsx)(n.h2,{id:"component-architecture",children:"Component Architecture"}),"\n",(0,r.jsx)(n.mermaid,{value:'graph TB\n    subgraph "App Layout"\n        A[RootLayout] --\x3e B[Navbar]\n        A --\x3e C[Main Content]\n        A --\x3e D[Footer]\n        A --\x3e E[Providers]\n    end\n    \n    subgraph "Page Components"\n        F[HomePage] --\x3e G[RepositoriesPageClient]\n        H[RepositoryDetailPage] --\x3e I[RepositoryPage]\n        J[AboutPage]\n        K[ConnectPage]\n    end\n    \n    subgraph "Repository Components"\n        L[RepositoryCard] --\x3e M[RepositoryGrid]\n        N[RepositoryFilters] --\x3e O[MultiSelectCombobox]\n        P[RepositoryPagination]\n        Q[RepositoryPageSkeleton]\n        R[RepositoryErrorState]\n        S[RepositoryEmptyState]\n        T[RepositoryLoadingGrid]\n        U[ContributorsScrollArea]\n    end\n    \n    subgraph "UI Components (Shadcn/ui)"\n        V[Button]\n        W[Card]\n        X[Input]\n        Y[Badge]\n        Z[Tabs]\n        AA[ScrollArea]\n        BB[Skeleton]\n    end\n    \n    subgraph "State Management"\n        CC[Zustand Store] --\x3e DD[useRepositoriesStore]\n        EE[TanStack Query] --\x3e FF[useQuery]\n    end\n    \n    C --\x3e F\n    C --\x3e H\n    C --\x3e J\n    C --\x3e K\n    G --\x3e M\n    G --\x3e N\n    G --\x3e P\n    M --\x3e L\n    I --\x3e U\n    I --\x3e Q\n    I --\x3e R\n    I --\x3e S\n    N --\x3e O\n    L --\x3e V\n    L --\x3e W\n    L --\x3e Y\n    I --\x3e Z\n    U --\x3e AA\n    Q --\x3e BB\n    DD --\x3e G\n    FF --\x3e G'}),"\n",(0,r.jsx)(n.h2,{id:"component-categories",children:"Component Categories"}),"\n",(0,r.jsx)(n.h3,{id:"1-layout-components",children:"1. Layout Components"}),"\n",(0,r.jsx)(n.p,{children:"Components that provide the overall application structure and navigation."}),"\n",(0,r.jsx)(n.h3,{id:"2-page-components",children:"2. Page Components"}),"\n",(0,r.jsx)(n.p,{children:"Top-level components that represent entire pages or major sections."}),"\n",(0,r.jsx)(n.h3,{id:"3-ui-components",children:"3. UI Components"}),"\n",(0,r.jsx)(n.p,{children:"Reusable interface components for displaying data and handling user interactions."}),"\n",(0,r.jsx)(n.h3,{id:"4-state-components",children:"4. State Components"}),"\n",(0,r.jsx)(n.p,{children:"Components that manage complex state logic and data flow."}),"\n",(0,r.jsx)(n.h3,{id:"5-utility-components",children:"5. Utility Components"}),"\n",(0,r.jsx)(n.p,{children:"Helper components for loading states, error handling, and common patterns."}),"\n",(0,r.jsx)(n.h2,{id:"component-hierarchy",children:"Component Hierarchy"}),"\n",(0,r.jsx)(n.h3,{id:"root-level",children:"Root Level"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"RootLayout (app/layout.tsx)\n\u251c\u2500\u2500 Providers (app/Providers.tsx)\n\u2502   \u2514\u2500\u2500 QueryClientProvider\n\u251c\u2500\u2500 ThemeProvider\n\u251c\u2500\u2500 Navbar\n\u251c\u2500\u2500 {children} (Page Content)\n\u2514\u2500\u2500 Footer\n"})}),"\n",(0,r.jsx)(n.h3,{id:"repository-pages",children:"Repository Pages"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"RepositoriesPage (app/repositories/page.tsx)\n\u2514\u2500\u2500 RepositoriesPageClient\n    \u251c\u2500\u2500 RepositoryFilters\n    \u2502   \u251c\u2500\u2500 SearchInput\n    \u2502   \u251c\u2500\u2500 UniversityFilter (MultiSelectCombobox)\n    \u2502   \u251c\u2500\u2500 LanguageFilter (MultiSelectCombobox)\n    \u2502   \u251c\u2500\u2500 LicenseFilter (MultiSelectCombobox)\n    \u2502   \u251c\u2500\u2500 OwnerFilter (MultiSelectCombobox)\n    \u2502   \u2514\u2500\u2500 TopicFilter (MultiSelectCombobox)\n    \u251c\u2500\u2500 RepositoryGrid\n    \u2502   \u2514\u2500\u2500 RepositoryCard (multiple)\n    \u2514\u2500\u2500 RepositoryPagination\n\nRepositoryDetailPage (app/repositories/[owner]/[repo]/page.tsx)\n\u2514\u2500\u2500 RepositoryPage\n    \u251c\u2500\u2500 RepositoryMetadata\n    \u251c\u2500\u2500 RepositoryReadme\n    \u2514\u2500\u2500 ContributorsScrollArea\n"})}),"\n",(0,r.jsx)(n.h2,{id:"component-props-and-interfaces",children:"Component Props and Interfaces"}),"\n",(0,r.jsx)(n.h3,{id:"repository-data-interface",children:"Repository Data Interface"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface Repository {\n  full_name: string;\n  description?: string;\n  language?: string;\n  license?: string;\n  owner?: string;\n  university?: string;\n  stargazers_count?: string;\n  forks_count?: string;\n  html_url?: string;\n  topic_area_ai?: string;\n  // ... other fields\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"common-component-patterns",children:"Common Component Patterns"}),"\n",(0,r.jsx)(n.h4,{id:"props-interface-pattern",children:"Props Interface Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface ComponentProps {\n  // Required props\n  data: Repository[];\n  onAction: (item: Repository) => void;\n  \n  // Optional props with defaults\n  loading?: boolean;\n  error?: string | null;\n  className?: string;\n  \n  // Event handlers\n  onFilter?: (filters: FilterState) => void;\n  onSort?: (field: string, order: 'asc' | 'desc') => void;\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"children-pattern",children:"Children Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface ContainerProps {\n  children: React.ReactNode;\n  title?: string;\n  actions?: React.ReactNode;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"state-management-integration",children:"State Management Integration"}),"\n",(0,r.jsx)(n.h3,{id:"zustand-store-connection",children:"Zustand Store Connection"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Component using Zustand store\nexport function RepositoryFilters() {\n  const searchTerm = useRepositoriesStore((state) => state.searchTerm);\n  const setSearchTerm = useRepositoriesStore((state) => state.setSearchTerm);\n  \n  const handleSearchChange = (value: string) => {\n    setSearchTerm(value);\n  };\n  \n  return (\n    <input \n      value={searchTerm}\n      onChange={(e) => handleSearchChange(e.target.value)}\n    />\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"tanstack-query-integration",children:"TanStack Query Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Component using TanStack Query\nexport function RepositoriesPageClient() {\n  const { data: repositories, isLoading, error } = useQuery({\n    queryKey: ['repositories'],\n    queryFn: fetchRepositories,\n  });\n  \n  if (isLoading) return <RepositoryLoadingGrid />;\n  if (error) return <RepositoryErrorState error={error} />;\n  \n  return <RepositoryGrid repositories={repositories} />;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"component-communication-patterns",children:"Component Communication Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"props-down-events-up",children:"Props Down, Events Up"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Parent component\nfunction RepositoriesPageClient() {\n  const [filters, setFilters] = useState<FilterState>({});\n  \n  const handleFilterChange = (newFilters: FilterState) => {\n    setFilters(newFilters);\n  };\n  \n  return (\n    <div>\n      <RepositoryFilters \n        filters={filters}\n        onFilterChange={handleFilterChange}\n      />\n      <RepositoryGrid \n        repositories={filteredRepositories}\n        loading={isLoading}\n      />\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"context-for-deep-props",children:"Context for Deep Props"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Repository context for deep component trees\nconst RepositoryContext = createContext<Repository | null>(null);\n\nfunction RepositoryPage({ repo }: { repo: Repository }) {\n  return (\n    <RepositoryContext.Provider value={repo}>\n      <RepositoryHeader />\n      <RepositoryContent />\n      <RepositoryFooter />\n    </RepositoryContext.Provider>\n  );\n}\n\nfunction RepositoryHeader() {\n  const repo = useContext(RepositoryContext);\n  return <h1>{repo?.full_name}</h1>;\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"styling-and-design-system",children:"Styling and Design System"}),"\n",(0,r.jsx)(n.h3,{id:"tailwind-css-classes",children:"Tailwind CSS Classes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Consistent styling patterns\nconst cardStyles = "bg-white border shadow-xl hover:shadow-2xl transition-all duration-300";\nconst buttonStyles = "bg-sky-600 hover:bg-sky-700 text-white px-4 py-2 rounded-md";\nconst inputStyles = "border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-sky-500";\n'})}),"\n",(0,r.jsx)(n.h3,{id:"shadcnui-integration",children:"Shadcn/ui Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { Button } from "@/components/ui/button";\nimport { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";\nimport { Input } from "@/components/ui/input";\n\nfunction ExampleComponent() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Repository Details</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <Input placeholder="Search repositories..." />\n        <Button>Search</Button>\n      </CardContent>\n    </Card>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"performance-optimization-patterns",children:"Performance Optimization Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"memoization",children:"Memoization"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Memoized expensive computations\nconst filteredRepositories = useMemo(() => {\n  return repositories.filter(repo => \n    repo.language === selectedLanguage &&\n    repo.university === selectedUniversity\n  );\n}, [repositories, selectedLanguage, selectedUniversity]);\n\n// Memoized components\nconst RepositoryCard = memo(({ repository }: { repository: Repository }) => {\n  return (\n    <div>\n      <h3>{repository.full_name}</h3>\n      <p>{repository.description}</p>\n    </div>\n  );\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"callback-optimization",children:"Callback Optimization"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Stable callback references\nconst handleRepositoryClick = useCallback((repository: Repository) => {\n  router.push(`/repositories/${repository.full_name}`);\n}, [router]);\n\nconst handleFilterChange = useCallback((newFilters: FilterState) => {\n  setFilters(newFilters);\n  setPage(1); // Reset pagination\n}, []);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"error-handling-patterns",children:"Error Handling Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"error-boundaries",children:"Error Boundaries"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'class RepositoryErrorBoundary extends Component<\n  { children: ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n  \n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true };\n  }\n  \n  render() {\n    if (this.state.hasError) {\n      return <RepositoryErrorState error="Something went wrong" />;\n    }\n    \n    return this.props.children;\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"graceful-degradation",children:"Graceful Degradation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function RepositoryCard({ repository }: { repository: Repository }) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{repository.full_name || 'Unknown Repository'}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p>{repository.description || 'No description available'}</p>\n        {repository.language && (\n          <Badge>{repository.language}</Badge>\n        )}\n        {repository.stargazers_count && (\n          <span>\u2b50 {repository.stargazers_count}</span>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"loading-state-patterns",children:"Loading State Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"skeleton-loading",children:"Skeleton Loading"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'function RepositoryCardSkeleton() {\n  return (\n    <Card>\n      <CardHeader>\n        <Skeleton className="h-6 w-3/4" />\n        <Skeleton className="h-4 w-1/2" />\n      </CardHeader>\n      <CardContent>\n        <Skeleton className="h-4 w-full mb-2" />\n        <Skeleton className="h-4 w-2/3" />\n        <div className="flex gap-2 mt-4">\n          <Skeleton className="h-6 w-16" />\n          <Skeleton className="h-6 w-12" />\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"progressive-loading",children:"Progressive Loading"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'function RepositoryGrid({ repositories }: { repositories: Repository[] }) {\n  const [loadedCount, setLoadedCount] = useState(10);\n  \n  const visibleRepositories = repositories.slice(0, loadedCount);\n  \n  const loadMore = () => {\n    setLoadedCount(prev => Math.min(prev + 10, repositories.length));\n  };\n  \n  return (\n    <div>\n      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">\n        {visibleRepositories.map(repo => (\n          <RepositoryCard key={repo.full_name} repository={repo} />\n        ))}\n      </div>\n      {loadedCount < repositories.length && (\n        <Button onClick={loadMore}>Load More</Button>\n      )}\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"accessibility-patterns",children:"Accessibility Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"keyboard-navigation",children:"Keyboard Navigation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function RepositoryCard({ repository }: { repository: Repository }) {\n  const handleKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      router.push(`/repositories/${repository.full_name}`);\n    }\n  };\n  \n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      onKeyDown={handleKeyDown}\n      onClick={() => router.push(`/repositories/${repository.full_name}`)}\n      className=\"cursor-pointer focus:ring-2 focus:ring-sky-500\"\n    >\n      {/* Card content */}\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"screen-reader-support",children:"Screen Reader Support"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'function RepositoryStats({ repository }: { repository: Repository }) {\n  return (\n    <div className="flex gap-4">\n      <span aria-label={`${repository.stargazers_count} stars`}>\n        \u2b50 {repository.stargazers_count}\n      </span>\n      <span aria-label={`${repository.forks_count} forks`}>\n        \ud83c\udf74 {repository.forks_count}\n      </span>\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"testing-patterns",children:"Testing Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"component-testing",children:"Component Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { render, screen, fireEvent } from '@testing-library/react';\nimport { RepositoryCard } from './RepositoryCard';\n\nconst mockRepository: Repository = {\n  full_name: 'test/repo',\n  description: 'Test repository',\n  language: 'TypeScript',\n  stargazers_count: '100',\n};\n\ntest('renders repository card with correct information', () => {\n  render(<RepositoryCard repository={mockRepository} />);\n  \n  expect(screen.getByText('test/repo')).toBeInTheDocument();\n  expect(screen.getByText('Test repository')).toBeInTheDocument();\n  expect(screen.getByText('TypeScript')).toBeInTheDocument();\n  expect(screen.getByText('\u2b50 100')).toBeInTheDocument();\n});\n\ntest('navigates to repository page on click', () => {\n  const mockPush = jest.fn();\n  jest.mock('next/navigation', () => ({\n    useRouter: () => ({ push: mockPush }),\n  }));\n  \n  render(<RepositoryCard repository={mockRepository} />);\n  \n  fireEvent.click(screen.getByRole('button'));\n  expect(mockPush).toHaveBeenCalledWith('/repositories/test/repo');\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"This component architecture provides a solid foundation for building scalable, maintainable, and performant React applications with proper separation of concerns and reusability."})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);