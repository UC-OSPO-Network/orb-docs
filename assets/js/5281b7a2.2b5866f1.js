"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[2443],{936:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"architecture","title":"Architecture","description":"This document explains the UC ORB Showcase system architecture and how components interact.","source":"@site/docs/architecture.md","sourceDirName":".","slug":"/architecture","permalink":"/orb-docs/docs/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/UC-OSPO-Network/orb-showcase/tree/main/doc/docs/architecture.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/orb-docs/docs/getting-started"},"next":{"title":"Project Structure","permalink":"/orb-docs/docs/project-structure"}}');var r=i(4848),t=i(8453);const c={sidebar_position:3},a="Architecture",o={},l=[{value:"System Overview",id:"system-overview",level:2},{value:"Frontend Architecture",id:"frontend-architecture",level:2},{value:"Key Components:",id:"key-components",level:3},{value:"State Management:",id:"state-management",level:3},{value:"Data Flow:",id:"data-flow",level:3},{value:"Main Pages:",id:"main-pages",level:3},{value:"Backend Architecture",id:"backend-architecture",level:2},{value:"Key Files:",id:"key-files",level:3},{value:"Database Model:",id:"database-model",level:3},{value:"API Endpoints:",id:"api-endpoints",level:3},{value:"Database Architecture",id:"database-architecture",level:2},{value:"Main Table:",id:"main-table",level:3},{value:"Data Source:",id:"data-source",level:3},{value:"Docker Configuration",id:"docker-configuration",level:2},{value:"Services:",id:"services",level:3},{value:"Networking:",id:"networking",level:3},{value:"Configuration",id:"configuration",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"architecture",children:"Architecture"})}),"\n",(0,r.jsx)(n.p,{children:"This document explains the UC ORB Showcase system architecture and how components interact."}),"\n",(0,r.jsx)(n.h2,{id:"system-overview",children:"System Overview"}),"\n",(0,r.jsx)(n.p,{children:"UC ORB Showcase architecture:"}),"\n",(0,r.jsx)(n.mermaid,{value:"graph TD\n    U[User Browser] --\x3e F[Next.js Frontend<br/>Port 3000]\n    F --\x3e|API Requests| B[FastAPI Backend<br/>Port 8000]\n    B --\x3e|SQL Queries| D[(PostgreSQL<br/>Database)]\n    \n    F -.->|State Management| Z[Zustand Store]\n    F -.->|Data Fetching| R[React Query]\n    B -.->|ORM| S[SQLModel]"}),"\n",(0,r.jsx)(n.h2,{id:"frontend-architecture",children:"Frontend Architecture"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Location:"})," ",(0,r.jsx)(n.code,{children:"/frontend/"})]}),"\n",(0,r.jsx)(n.p,{children:"The frontend is a Next.js application with the App Router."}),"\n",(0,r.jsx)(n.h3,{id:"key-components",children:"Key Components:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pages"})," (",(0,r.jsx)(n.code,{children:"app/"}),"): Route handlers and page components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Components"})," (",(0,r.jsx)(n.code,{children:"components/"}),"): Reusable UI components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"State"})," (",(0,r.jsx)(n.code,{children:"store/"}),"): Zustand store for client-side state"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Styles"})," (",(0,r.jsx)(n.code,{children:"globals.css"}),", Tailwind): Application styling"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"state-management",children:"State Management:"}),"\n",(0,r.jsxs)(n.p,{children:["Zustand store (",(0,r.jsx)(n.code,{children:"store/repositories.ts"}),") manages:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Repository data and filters"}),"\n",(0,r.jsx)(n.li,{children:"Search terms and selected options"}),"\n",(0,r.jsx)(n.li,{children:"UI state for filtering"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"data-flow",children:"Data Flow:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"User interacts with UI components"}),"\n",(0,r.jsx)(n.li,{children:"Components read/update Zustand state"}),"\n",(0,r.jsx)(n.li,{children:"TanStack React Query fetches data from backend API"}),"\n",(0,r.jsx)(n.li,{children:"UI re-renders based on state changes"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"main-pages",children:"Main Pages:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/"})," - Homepage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/repositories"})," - Repository listing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/about"})," - About page"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/connect"})," - Contact/submission page"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"backend-architecture",children:"Backend Architecture"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Location:"})," ",(0,r.jsx)(n.code,{children:"/backend/"})]}),"\n",(0,r.jsx)(n.p,{children:"FastAPI application providing REST API endpoints."}),"\n",(0,r.jsx)(n.h3,{id:"key-files",children:"Key Files:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"main.py"})})," - FastAPI app, routes, and endpoints"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"models.py"})})," - SQLModel database models"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"database.py"})})," - Database connection and session management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"keys.py"})})," - Environment variable configuration"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"database-model",children:"Database Model:"}),"\n",(0,r.jsxs)(n.p,{children:["Uses ",(0,r.jsx)(n.code,{children:"showcase_view"})," table with repository information including name, description, university, language, and metadata."]}),"\n",(0,r.jsx)(n.h3,{id:"api-endpoints",children:"API Endpoints:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /repositories"})," - List repositories with filtering"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /languages"})," - Get unique programming languages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /universities"})," - Get unique universities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /licenses"})," - Get unique licenses"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /owners"})," - Get unique repository owners"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /topics"})," - Get unique topic areas"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"database-architecture",children:"Database Architecture"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Technology:"})," PostgreSQL"]}),"\n",(0,r.jsx)(n.h3,{id:"main-table",children:"Main Table:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"showcase_view"})})," - Primary table containing repository information"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"data-source",children:"Data Source:"}),"\n",(0,r.jsx)(n.p,{children:"The database is populated from GitHub repository data and contains:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Repository metadata (stars, forks, language)"}),"\n",(0,r.jsx)(n.li,{children:"UC affiliation information"}),"\n",(0,r.jsx)(n.li,{children:"Contact and funding details"}),"\n",(0,r.jsx)(n.li,{children:"Topic area classifications"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"docker-configuration",children:"Docker Configuration"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"File:"})," ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})]}),"\n",(0,r.jsx)(n.h3,{id:"services",children:"Services:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"backend"})," - FastAPI application (port 8000)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"frontend"})," - Next.js application (port 3000)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"networking",children:"Networking:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Uses ",(0,r.jsx)(n.code,{children:"local-dev-net"})," external network"]}),"\n",(0,r.jsx)(n.li,{children:"Services communicate via service names"}),"\n",(0,r.jsx)(n.li,{children:"Volume mounts for development"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Backend:"})," Database connection via ",(0,r.jsx)(n.code,{children:"POSTGRES_DB_URL"})," environment variable\n",(0,r.jsx)(n.strong,{children:"Frontend:"})," API URL via ",(0,r.jsx)(n.code,{children:"NEXT_PUBLIC_API_URL"})," environment variable"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>a});var s=i(6540);const r={},t=s.createContext(r);function c(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);