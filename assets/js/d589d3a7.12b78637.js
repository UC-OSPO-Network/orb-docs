"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[7924],{6475:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"getting-started","title":"Getting Started","description":"This guide will help you set up UC ORB Showcase for local development, understand the codebase structure, and make your first contribution.","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/orb-docs/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/UC-OSPO-Network/orb-showcase/tree/main/doc/docs/getting-started.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Architecture Overview","permalink":"/orb-docs/docs/architecture"},"next":{"title":"Project Structure Overview","permalink":"/orb-docs/docs/project-structure/overview"}}');var i=t(4848),r=t(8453);const o={sidebar_position:3},l="Getting Started",a={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Required Software",id:"required-software",level:3},{value:"Recommended Tools",id:"recommended-tools",level:3},{value:"Quick Start",id:"quick-start",level:2},{value:"1. Clone the Repository",id:"1-clone-the-repository",level:3},{value:"2. Set Up the Database",id:"2-set-up-the-database",level:3},{value:"Option A: Docker (Recommended)",id:"option-a-docker-recommended",level:4},{value:"Option B: Local PostgreSQL",id:"option-b-local-postgresql",level:4},{value:"3. Set Up the Backend",id:"3-set-up-the-backend",level:3},{value:"4. Set Up the Frontend",id:"4-set-up-the-frontend",level:3},{value:"5. Start Development Servers",id:"5-start-development-servers",level:3},{value:"Terminal 1: Backend",id:"terminal-1-backend",level:4},{value:"Terminal 2: Frontend",id:"terminal-2-frontend",level:4},{value:"6. Access the Application",id:"6-access-the-application",level:3},{value:"Project Structure Overview",id:"project-structure-overview",level:2},{value:"Understanding the Codebase",id:"understanding-the-codebase",level:2},{value:"Frontend Architecture",id:"frontend-architecture",level:3},{value:"1. App Router Structure",id:"1-app-router-structure",level:4},{value:"2. Component Organization",id:"2-component-organization",level:4},{value:"3. State Management",id:"3-state-management",level:4},{value:"Backend Architecture",id:"backend-architecture",level:3},{value:"1. API Routes",id:"1-api-routes",level:4},{value:"2. Data Models",id:"2-data-models",level:4},{value:"3. Database Integration",id:"3-database-integration",level:4},{value:"Development Workflow",id:"development-workflow",level:2},{value:"1. Making Changes",id:"1-making-changes",level:3},{value:"Frontend Changes",id:"frontend-changes",level:4},{value:"Backend Changes",id:"backend-changes",level:4},{value:"2. Code Quality",id:"2-code-quality",level:3},{value:"Frontend Linting and Formatting",id:"frontend-linting-and-formatting",level:4},{value:"Type Checking",id:"type-checking",level:4},{value:"3. Testing",id:"3-testing",level:3},{value:"Frontend Testing",id:"frontend-testing",level:4},{value:"Backend Testing",id:"backend-testing",level:4},{value:"Common Development Tasks",id:"common-development-tasks",level:2},{value:"Adding a New API Endpoint",id:"adding-a-new-api-endpoint",level:3},{value:"Adding a New React Component",id:"adding-a-new-react-component",level:3},{value:"Adding a New Filter",id:"adding-a-new-filter",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Database Connection Issues",id:"database-connection-issues",level:4},{value:"Frontend Build Issues",id:"frontend-build-issues",level:4},{value:"Backend Import Issues",id:"backend-import-issues",level:4},{value:"Getting Help",id:"getting-help",level:3},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,i.jsx)(n.p,{children:"This guide will help you set up UC ORB Showcase for local development, understand the codebase structure, and make your first contribution."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(n.p,{children:"Before you begin, ensure you have the following installed on your system:"}),"\n",(0,i.jsx)(n.h3,{id:"required-software",children:"Required Software"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Node.js 18+"})," and npm/yarn"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Python 3.9+"})," and pip"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"PostgreSQL 15+"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Git"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Docker"})," (optional, for containerized development)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"recommended-tools",children:"Recommended Tools"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"VS Code"})," with extensions:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"TypeScript and JavaScript Language Features"}),"\n",(0,i.jsx)(n.li,{children:"Python"}),"\n",(0,i.jsx)(n.li,{children:"PostgreSQL"}),"\n",(0,i.jsx)(n.li,{children:"Tailwind CSS IntelliSense"}),"\n",(0,i.jsx)(n.li,{children:"ES7+ React/Redux/React-Native snippets"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,i.jsx)(n.h3,{id:"1-clone-the-repository",children:"1. Clone the Repository"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/UC-OSPO-Network/orb-showcase.git\ncd orb-showcase\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-set-up-the-database",children:"2. Set Up the Database"}),"\n",(0,i.jsx)(n.h4,{id:"option-a-docker-recommended",children:"Option A: Docker (Recommended)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start PostgreSQL container\ndocker run -d \\\n  --name orb-db \\\n  -e POSTGRES_USER=postgres \\\n  -e POSTGRES_PASSWORD=orb \\\n  -e POSTGRES_DB=sample \\\n  -p 5432:5432 \\\n  postgres:15\n\n# Load sample data (if available)\ncat db/sample.sql | docker exec -i orb-db psql -U postgres -d sample\n"})}),"\n",(0,i.jsx)(n.h4,{id:"option-b-local-postgresql",children:"Option B: Local PostgreSQL"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Create database\ncreatedb sample\n\n# Load sample data\npsql -d sample -f db/sample.sql\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-set-up-the-backend",children:"3. Set Up the Backend"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Navigate to backend directory\ncd backend\n\n# Create virtual environment\npython3 -m venv .venv\nsource .venv/bin/activate  # On Windows: .venv\\Scripts\\activate\n\n# Install dependencies\npip install -r requirements.txt\n\n# Set up environment variables\ncp .env.example .env\n# Edit .env with your database connection string\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Edit ",(0,i.jsx)(n.code,{children:"backend/.env"}),":"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"POSTGRES_DB_URL=postgresql://postgres:orb@localhost:5432/sample\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-set-up-the-frontend",children:"4. Set Up the Frontend"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Navigate to frontend directory\ncd ../frontend\n\n# Install dependencies\nnpm install\n\n# Set up environment variables\ncp .env.example .env.local\n# Edit .env.local with your API URL\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Edit ",(0,i.jsx)(n.code,{children:"frontend/.env.local"}),":"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"NEXT_PUBLIC_API_URL=http://localhost:8000\n"})}),"\n",(0,i.jsx)(n.h3,{id:"5-start-development-servers",children:"5. Start Development Servers"}),"\n",(0,i.jsx)(n.h4,{id:"terminal-1-backend",children:"Terminal 1: Backend"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd backend\nsource .venv/bin/activate\nuvicorn main:app --reload --host 0.0.0.0 --port 8000\n"})}),"\n",(0,i.jsx)(n.h4,{id:"terminal-2-frontend",children:"Terminal 2: Frontend"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd frontend\nnpm run dev\n"})}),"\n",(0,i.jsx)(n.h3,{id:"6-access-the-application",children:"6. Access the Application"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Frontend"}),": ",(0,i.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Backend API"}),": ",(0,i.jsx)(n.a,{href:"http://localhost:8000",children:"http://localhost:8000"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API Documentation"}),": ",(0,i.jsx)(n.a,{href:"http://localhost:8000/docs",children:"http://localhost:8000/docs"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"project-structure-overview",children:"Project Structure Overview"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"orb-showcase/\n\u251c\u2500\u2500 frontend/                    # Next.js frontend application\n\u2502   \u251c\u2500\u2500 app/                    # Next.js App Router pages\n\u2502   \u251c\u2500\u2500 components/             # React components\n\u2502   \u251c\u2500\u2500 store/                  # Zustand state management\n\u2502   \u251c\u2500\u2500 lib/                    # Utility functions\n\u2502   \u2514\u2500\u2500 styles/                 # Global styles\n\u251c\u2500\u2500 backend/                     # FastAPI backend service\n\u2502   \u251c\u2500\u2500 main.py                 # API routes and application\n\u2502   \u251c\u2500\u2500 models.py               # Database and API models\n\u2502   \u251c\u2500\u2500 database.py             # Database connection\n\u2502   \u2514\u2500\u2500 requirements.txt        # Python dependencies\n\u251c\u2500\u2500 db/                         # Database scripts and migrations\n\u251c\u2500\u2500 doc/                        # Documentation (Docusaurus)\n\u2514\u2500\u2500 docker-compose.yml          # Docker development setup\n"})}),"\n",(0,i.jsx)(n.h2,{id:"understanding-the-codebase",children:"Understanding the Codebase"}),"\n",(0,i.jsx)(n.h3,{id:"frontend-architecture",children:"Frontend Architecture"}),"\n",(0,i.jsx)(n.p,{children:"The frontend is built with Next.js 15 and follows these key patterns:"}),"\n",(0,i.jsx)(n.h4,{id:"1-app-router-structure",children:"1. App Router Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"frontend/app/\n\u251c\u2500\u2500 layout.tsx                  # Root layout with providers\n\u251c\u2500\u2500 page.tsx                    # Home page\n\u251c\u2500\u2500 repositories/               # Repository browsing\n\u2502   \u251c\u2500\u2500 page.tsx               # Server component wrapper\n\u2502   \u251c\u2500\u2500 RepositoriesPageClient.tsx  # Client component with state\n\u2502   \u2514\u2500\u2500 [owner]/[repo]/        # Dynamic repository detail\n\u2514\u2500\u2500 Providers.tsx              # React Query and other providers\n"})}),"\n",(0,i.jsx)(n.h4,{id:"2-component-organization",children:"2. Component Organization"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"frontend/components/\n\u251c\u2500\u2500 ui/                        # Shadcn/ui components\n\u251c\u2500\u2500 RepositoryCard.tsx         # Individual repository card\n\u251c\u2500\u2500 RepositoryGrid/            # Grid layout component\n\u251c\u2500\u2500 RepositoryFilters/         # Search and filter sidebar\n\u251c\u2500\u2500 RepositoryPage.tsx         # Repository detail view\n\u2514\u2500\u2500 Navbar.tsx                 # Global navigation\n"})}),"\n",(0,i.jsx)(n.h4,{id:"3-state-management",children:"3. State Management"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// Zustand store for global state\nexport const useRepositoriesStore = create<RepositoriesState>((set) => ({\n  repositories: [],\n  searchTerm: "",\n  universitiesSelected: [],\n  languagesSelected: [],\n  // ... other state\n}));\n\n// TanStack Query for server state\nconst { data: repositories } = useQuery({\n  queryKey: ["repositories"],\n  queryFn: () => fetch(`${API_URL}/repositories`).then(res => res.json()),\n});\n'})}),"\n",(0,i.jsx)(n.h3,{id:"backend-architecture",children:"Backend Architecture"}),"\n",(0,i.jsx)(n.p,{children:"The backend uses FastAPI with a clean, simple structure:"}),"\n",(0,i.jsx)(n.h4,{id:"1-api-routes",children:"1. API Routes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# main.py - All API endpoints\n@app.get("/repositories", response_model=List[RepositoryResponse])\ndef list_repositories(\n    q: str = Query(None),\n    university: List[str] = Query(None),\n    language: List[str] = Query(None),\n    # ... other filters\n):\n    # Implementation\n'})}),"\n",(0,i.jsx)(n.h4,{id:"2-data-models",children:"2. Data Models"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# models.py - Database and API models\nclass Repository(SQLModel, table=True):\n    __tablename__ = "showcase_view"\n    full_name: str = Field(primary_key=True)\n    description: str | None\n    university: str | None\n    # ... other fields\n\nclass RepositoryResponse(BaseModel):\n    full_name: str\n    description: str | None\n    # ... response fields\n'})}),"\n",(0,i.jsx)(n.h4,{id:"3-database-integration",children:"3. Database Integration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# database.py - Database connection\nengine = create_engine(keys.POSTGRES_DB_URL, echo=True)\n\ndef get_session():\n    with Session(autocommit=False, autoflush=False, bind=engine) as session:\n        yield session\n"})}),"\n",(0,i.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,i.jsx)(n.h3,{id:"1-making-changes",children:"1. Making Changes"}),"\n",(0,i.jsx)(n.h4,{id:"frontend-changes",children:"Frontend Changes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start development server\ncd frontend\nnpm run dev\n\n# The server will automatically reload on file changes\n# TypeScript errors will be shown in the terminal\n"})}),"\n",(0,i.jsx)(n.h4,{id:"backend-changes",children:"Backend Changes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start development server with auto-reload\ncd backend\nuvicorn main:app --reload\n\n# The server will automatically reload on file changes\n# Check http://localhost:8000/docs for API documentation\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-code-quality",children:"2. Code Quality"}),"\n",(0,i.jsx)(n.h4,{id:"frontend-linting-and-formatting",children:"Frontend Linting and Formatting"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd frontend\nnpm run lint          # Check for linting errors\nnpm run lint:fix      # Fix auto-fixable linting errors\n"})}),"\n",(0,i.jsx)(n.h4,{id:"type-checking",children:"Type Checking"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd frontend\nnpx tsc --noEmit      # Check TypeScript types\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-testing",children:"3. Testing"}),"\n",(0,i.jsx)(n.h4,{id:"frontend-testing",children:"Frontend Testing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd frontend\nnpm run test          # Run unit tests (if configured)\nnpm run test:e2e      # Run end-to-end tests (if configured)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"backend-testing",children:"Backend Testing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd backend\npython -m pytest     # Run backend tests (if configured)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"common-development-tasks",children:"Common Development Tasks"}),"\n",(0,i.jsx)(n.h3,{id:"adding-a-new-api-endpoint",children:"Adding a New API Endpoint"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsxs)(n.strong,{children:["Define the endpoint in ",(0,i.jsx)(n.code,{children:"backend/main.py"}),":"]})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.get("/new-endpoint", response_model=List[str])\ndef get_new_data(session: Session = Depends(get_session)):\n    # Implementation\n    return ["data"]\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Update the frontend to use the new endpoint:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const { data } = useQuery({\n  queryKey: ["new-data"],\n  queryFn: () => fetch(`${API_URL}/new-endpoint`).then(res => res.json()),\n});\n'})}),"\n",(0,i.jsx)(n.h3,{id:"adding-a-new-react-component",children:"Adding a New React Component"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Create the component file:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// components/NewComponent.tsx\ninterface NewComponentProps {\n  title: string;\n  description?: string;\n}\n\nexport function NewComponent({ title, description }: NewComponentProps) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {description && <p>{description}</p>}\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Use the component:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { NewComponent } from \'@/components/NewComponent\';\n\nexport default function Page() {\n  return <NewComponent title="Hello" description="World" />;\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"adding-a-new-filter",children:"Adding a New Filter"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Update the Zustand store:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface RepositoriesState {\n  // ... existing state\n  newFilterSelected: string[];\n  setNewFilterSelected: (v: string[]) => void;\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Add the filter to the API:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def list_repositories(\n    # ... existing parameters\n    new_filter: List[str] = Query(None, description="New filter"),\n):\n    # ... existing logic\n    if new_filter:\n        statement = statement.where(Repository.new_field.in_(new_filter))\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Update the frontend filtering logic:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const filteredRepositories = useMemo(() => {\n  let result = repositories;\n  // ... existing filters\n  if (newFilterSelected.length > 0) {\n    result = result.filter(r => r.newField && newFilterSelected.includes(r.newField));\n  }\n  return result;\n}, [repositories, newFilterSelected, /* other dependencies */]);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsx)(n.h4,{id:"database-connection-issues",children:"Database Connection Issues"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check if PostgreSQL is running\ndocker ps  # Should show orb-db container\n\n# Check connection string\necho $POSTGRES_DB_URL\n\n# Test connection\npsql postgresql://postgres:orb@localhost:5432/sample\n"})}),"\n",(0,i.jsx)(n.h4,{id:"frontend-build-issues",children:"Frontend Build Issues"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Clear Next.js cache\nrm -rf .next\n\n# Reinstall dependencies\nrm -rf node_modules package-lock.json\nnpm install\n"})}),"\n",(0,i.jsx)(n.h4,{id:"backend-import-issues",children:"Backend Import Issues"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Ensure virtual environment is activated\nsource .venv/bin/activate\n\n# Reinstall dependencies\npip install -r requirements.txt\n"})}),"\n",(0,i.jsx)(n.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentation"}),": Check this documentation site"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GitHub Issues"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/UC-OSPO-Network/orb-showcase/issues",children:"Report bugs or ask questions"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Code Review"}),": Submit a pull request for feedback"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.p,{children:"Now that you have the development environment set up:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Explore the codebase"}),": Browse through the components and understand the data flow"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Read the architecture docs"}),": Understand the system design decisions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Check open issues"}),": Find something to work on"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Make your first contribution"}),": Start with documentation or small bug fixes"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Continue to the ",(0,i.jsx)(n.a,{href:"./project-structure/overview",children:"Project Structure"})," guide to dive deeper into the codebase organization."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);